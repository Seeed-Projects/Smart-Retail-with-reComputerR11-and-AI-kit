[
    {
        "id": "456026febad7d00f",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ec80c14ac4f3520",
        "type": "modbus-write",
        "z": "456026febad7d00f",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MCoils",
        "adr": "0",
        "quantity": "6",
        "server": "fe859f85de924004",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1200,
        "y": 280,
        "wires": [
            [
                "a82e12077db53a34"
            ],
            []
        ]
    },
    {
        "id": "7e35ff14e8d9915a",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 1",
        "func": "// ��ȫ�ֱ�����ȡ�豸״̬�����δ�������ʼ��ΪĬ��״̬\nlet deviceStates = global.get('deviceStates') || [false, false, false, false, false, false];\n\n// ��� msg.topic �Ƿ��Ѷ��壬����������ִֵ�в�ͬ�Ĳ���\nif (msg.topic === \"turnOnAll\") {\n    // ���������豸״̬Ϊ����\n    deviceStates = [true, true, true, true, true, true];\n} else if (msg.topic === \"turnOffAll\") {\n    // ���������豸״̬Ϊ�ر�\n    deviceStates = [false, false, false, false, false, false];\n} else if (msg.topic && msg.topic.startsWith(\"device\")) {\n    // ȷ�� msg.topic �Ѷ��岢�� \"device\" ��ͷ\n    let index = parseInt(msg.topic.replace('device', '')) - 1; // ���磬\"device1\" תΪ���� 0\n    if (index >= 0 && index < deviceStates.length) {\n        deviceStates[index] = msg.payload; // �����豸״̬\n    } else {\n        node.warn(\"�豸����������Χ: \" + index);\n    }\n} else {\n    // ��� msg.topic �������κ���֪ģʽ���׳����������������\n    node.warn(\"δ�������ȷ�� topic: \" + msg.topic);\n}\n\n// ����״̬��ȫ�ֱ���\nglobal.set('deviceStates', deviceStates);\n\n// ��״̬���͵� Modbus Write �ڵ�\nmsg.payload = deviceStates; // ��״̬������Ϊ�����Ϣ\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "5ec80c14ac4f3520"
            ]
        ]
    },
    {
        "id": "a82e12077db53a34",
        "type": "debug",
        "z": "456026febad7d00f",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 280,
        "wires": []
    },
    {
        "id": "cd8c0619465deda7",
        "type": "ui_button",
        "z": "456026febad7d00f",
        "name": "",
        "group": "81ba4dbcc56405ae",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Turn on all",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "turnOnAll",
        "topicType": "str",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "37d04e0555141a60",
                "8b686a3baf7bc38b",
                "2ec5af98935add60",
                "5724bcf05505796a",
                "cd80738121169bc3"
            ]
        ]
    },
    {
        "id": "3a7d4e28b5b53aaa",
        "type": "ui_button",
        "z": "456026febad7d00f",
        "name": "",
        "group": "81ba4dbcc56405ae",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Turn off all",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "turnOffAll",
        "topicType": "str",
        "x": 450,
        "y": 280,
        "wires": [
            [
                "37d04e0555141a60",
                "8b686a3baf7bc38b",
                "2ec5af98935add60",
                "5724bcf05505796a",
                "cd80738121169bc3"
            ]
        ]
    },
    {
        "id": "37d04e0555141a60",
        "type": "ui_switch",
        "z": "456026febad7d00f",
        "name": "",
        "label": "fan1",
        "tooltip": "",
        "group": "81ba4dbcc56405ae",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "device 1",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "f90de75e85c53432",
                "7e35ff14e8d9915a"
            ]
        ]
    },
    {
        "id": "8b686a3baf7bc38b",
        "type": "ui_switch",
        "z": "456026febad7d00f",
        "name": "",
        "label": "fan2",
        "tooltip": "",
        "group": "81ba4dbcc56405ae",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "device 2",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 180,
        "wires": [
            [
                "f90de75e85c53432",
                "7e35ff14e8d9915a"
            ]
        ]
    },
    {
        "id": "2ec5af98935add60",
        "type": "ui_switch",
        "z": "456026febad7d00f",
        "name": "",
        "label": "LED1",
        "tooltip": "",
        "group": "81ba4dbcc56405ae",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "device 3",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 240,
        "wires": [
            [
                "f90de75e85c53432",
                "7e35ff14e8d9915a"
            ]
        ]
    },
    {
        "id": "5724bcf05505796a",
        "type": "ui_switch",
        "z": "456026febad7d00f",
        "name": "",
        "label": "LED2",
        "tooltip": "",
        "group": "81ba4dbcc56405ae",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "device 4",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 300,
        "wires": [
            [
                "f90de75e85c53432",
                "7e35ff14e8d9915a"
            ]
        ]
    },
    {
        "id": "cd80738121169bc3",
        "type": "ui_switch",
        "z": "456026febad7d00f",
        "name": "",
        "label": "LED3",
        "tooltip": "",
        "group": "81ba4dbcc56405ae",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "device 5",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 360,
        "wires": [
            [
                "f90de75e85c53432",
                "7e35ff14e8d9915a"
            ]
        ]
    },
    {
        "id": "a2591e576da1cae2",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 2",
        "func": "// Initialize the message history array if it doesn't exist\nif (!context.history) {\n    context.history = [];\n}\n\n// Add the new message with a timestamp\nconst newMessage = new Date().toLocaleTimeString() + \" - \" + msg.payload;\ncontext.history.push(newMessage);\n\n// Keep only the last 10 messages (optional)\nif (context.history.length > 10) {\n    context.history.shift();\n}\n\n// Send the updated history array as a single string to the next node\nmsg.payload = context.history.join('<br/>');\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 120,
        "wires": [
            [
                "9cab4d2d0597f2f7"
            ]
        ]
    },
    {
        "id": "9cab4d2d0597f2f7",
        "type": "ui_template",
        "z": "456026febad7d00f",
        "group": "81ba4dbcc56405ae",
        "name": "",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<div style=\"height: 200px; overflow-y: auto; border: 1px solid #ddd; padding: 5px;\">\n    <p ng-bind-html=\"msg.payload\"></p>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1440,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f90de75e85c53432",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 3",
        "func": "\nconst topic = msg.topic;\nconst payload = msg.payload;\nlet deviceName = \"\";\n\nif (topic === \"turnOffAll\") {\n    msg.payload = \"Turn off all appliances\";\n} else if (topic === \"turnOnAll\") {\n    msg.payload = \"Turn on all electrical appliances\";\n} else if (topic.startsWith(\"device\")) {\n   \n    const deviceNumber = topic.split(' ')[1]; \n    if (deviceNumber >= 1 && deviceNumber <= 6) {\n\n        if (deviceNumber === '1') {\n            deviceName = \"fan 1\";\n        } else if (deviceNumber === '2') {\n            deviceName = \"fan 2\";\n        } else if (deviceNumber === '3') {\n            deviceName = \"LED1\";\n        } else if (deviceNumber === '4') {\n            deviceName = \"LED2\";\n        } else if (deviceNumber === '5') {\n            deviceName = \"LED3\";\n        } else if (deviceNumber === '6') {\n            deviceName = \"LED4\";\n        }\n\n        if (payload === true) {\n            msg.payload = `${deviceName} open`;\n        } else {\n            msg.payload = `${deviceName} close`;\n        }\n    } else {\n\n        msg.payload = \"unknown device\";\n    }\n} else {\n\n    msg.payload = \"unknown oder\";\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 2,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "a2591e576da1cae2"
            ]
        ]
    },
    {
        "id": "812d2c67db31f875",
        "type": "ui_gauge",
        "z": "456026febad7d00f",
        "name": "",
        "group": "7d91bf9f4248ca2a",
        "order": 1,
        "width": 5,
        "height": 5,
        "gtype": "gage",
        "title": "Current temperature",
        "label": "",
        "format": "{{value}}",
        "min": "-40",
        "max": "125",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 980,
        "y": 460,
        "wires": []
    },
    {
        "id": "fc1330a0fd430f10",
        "type": "ui_gauge",
        "z": "456026febad7d00f",
        "name": "",
        "group": "7d91bf9f4248ca2a",
        "order": 2,
        "width": 5,
        "height": 5,
        "gtype": "gage",
        "title": "Current humidity",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1220,
        "y": 540,
        "wires": []
    },
    {
        "id": "4482f26ecf2bcb78",
        "type": "ui_gauge",
        "z": "456026febad7d00f",
        "name": "",
        "group": "7d91bf9f4248ca2a",
        "order": 3,
        "width": 5,
        "height": 5,
        "gtype": "gage",
        "title": "CO2",
        "label": "",
        "format": "{{value}}",
        "min": "300",
        "max": "1100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 600,
        "wires": []
    },
    {
        "id": "bc44a6bbb5da9c16",
        "type": "modbus-read",
        "z": "456026febad7d00f",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "4",
        "rate": "3",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "441e3b3393b1c64d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 530,
        "y": 580,
        "wires": [
            [
                "7ca956512e361704"
            ],
            []
        ]
    },
    {
        "id": "7ca956512e361704",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 5",
        "func": "// 获取 Modbus 读取的数据数组\nlet modbusData = msg.payload;\n\n// 第一个数据和第二个数据乘以0.01\nlet data1 = modbusData[0] * 0.01;\nlet data2 = modbusData[1] * 0.01;\n\n// 第四个数据乘以0.1\nlet data4 = modbusData[3] * 0.1;\n\n// 创建三个不同的消息对象用于分别输出\nlet msg1 = { payload: data1 };\nlet msg2 = { payload: data2 };\nlet msg3 = { payload: data4 };\n\n// 分别发送三个消息对象\nreturn [msg1, msg2, msg3];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 580,
        "wires": [
            [
                "812d2c67db31f875"
            ],
            [
                "fc1330a0fd430f10"
            ],
            [
                "4482f26ecf2bcb78"
            ]
        ]
    },
    {
        "id": "9523556c4ba383b2",
        "type": "mqtt in",
        "z": "456026febad7d00f",
        "name": "",
        "topic": "msg",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "443aac205ebaacb6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 960,
        "wires": [
            [
                "8c3a2e53098f6069",
                "02df7d05333f0b92"
            ]
        ]
    },
    {
        "id": "8c3a2e53098f6069",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 7",
        "func": "// 从 msg.payload 中获取数据\nlet data = msg.payload;\n\n// 提取 image 数据\nlet imageData = data.snapshot.image;\n\n// 提取 count 数据\nlet countData = data.persons.count;\n\n\n\n// 构建每个输出的 msg 对象\nlet msg1 = { payload: imageData }; // Base64 图片\nlet msg2 = { payload: countData }; // 人员数量\n\n\n// 通过三路输出数据\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1060,
        "wires": [
            [],
            [
                "9ae9b7e947acc4dd"
            ]
        ]
    },
    {
        "id": "9ae9b7e947acc4dd",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "4f02cdbb7a87f025",
        "order": 3,
        "width": 5,
        "height": 5,
        "label": " people number history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 980,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "20d0ce51efe797cb",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "d45c7efccb65bb76",
        "order": 2,
        "width": 5,
        "height": 5,
        "label": "Coco_number history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4cb19358cbb950bd",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "d45c7efccb65bb76",
        "order": 4,
        "width": 5,
        "height": 5,
        "label": "milk_number history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "d2be326938487de1",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "d45c7efccb65bb76",
        "order": 6,
        "width": 5,
        "height": 5,
        "label": "chips_number history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "b18995ba5b151a42",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "d45c7efccb65bb76",
        "order": 3,
        "width": 5,
        "height": 5,
        "label": "crackers_number history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1410,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "4739d50105910956",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 6",
        "func": "// 解析 JSON 数据\nlet jsonData = msg.payload;\n\n// 获取苹果、香蕉、橘子、人的数量\nlet Coco_number = jsonData.Coco_number;\nlet milk_number = jsonData.milk_number;\nlet chips_number = jsonData.chips_number;\nlet crackers_number = jsonData.crackers_number;\nlet popcorn_number = jsonData.popcorn_number;\nlet crisps_number = jsonData.crisps_number;\nlet image = jsonData.image;\n// let image = `data:image/jpg;base64,${jsonData.image}`;\n\n\n// 创建三个不同的消息对象用于分别输出\nlet msg1 = { payload: Coco_number };\nlet msg2 = { payload: milk_number };\nlet msg3 = { payload: chips_number };\nlet msg4 = { payload: crackers_number };\nlet msg5 = { payload: popcorn_number };\nlet msg6 = { payload: crisps_number };\nlet msg7 = { payload: image };\n\n// 分别发送三个消息对象\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7];\n",
        "outputs": 7,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 800,
        "wires": [
            [
                "20d0ce51efe797cb"
            ],
            [
                "4cb19358cbb950bd"
            ],
            [
                "d2be326938487de1"
            ],
            [
                "b18995ba5b151a42"
            ],
            [
                "c86373559af9b3a6"
            ],
            [
                "0d5114780de26d09"
            ],
            []
        ]
    },
    {
        "id": "f0f8a4c451839069",
        "type": "mqtt in",
        "z": "456026febad7d00f",
        "name": "",
        "topic": "/yolo/target",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "443aac205ebaacb6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 800,
        "wires": [
            [
                "4739d50105910956",
                "5e3be6b58047d0f2",
                "9ce1a15723565dad"
            ]
        ]
    },
    {
        "id": "c86373559af9b3a6",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "d45c7efccb65bb76",
        "order": 6,
        "width": 5,
        "height": 5,
        "label": "popcorn_number history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1410,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "0d5114780de26d09",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "d45c7efccb65bb76",
        "order": 3,
        "width": 5,
        "height": 5,
        "label": "crisps_number history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "deb5c4a368d39050",
        "type": "ui_template",
        "z": "456026febad7d00f",
        "group": "0806a69ac09c82e7",
        "name": "Video display",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<div class=\"grid-container\" style=\"\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 10px;\n    width: 100%;\n\">\n    <div>\n        <h3>Shelves</h3>\n        <img\n            id=\"liveStream1\"\n            alt=\"Live Stream 1\"\n            style=\"\n                width: 100%;\n                height: 100%;\n            \"\n        />\n    </div>\n    <div>\n        <h3>Warehouse</h3>\n        <img\n            id=\"liveStream2\"\n            alt=\"Live Stream 2\"\n            style=\"\n                width: 100%;\n                height: 100%;\n            \"\n        />\n    </div>\n</div>\n\n<script>\n    document.getElementById(\"liveStream1\").src = `${window.location.protocol}//${window.location.hostname}:2000/video_feed` // Jiahao;\n    document.getElementById(\"liveStream2\").src = `${window.location.protocol}//${window.location.hostname}:2001` // Chengxun;\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "69cbf36cd1dc3d89",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 8",
        "func": "// 生成三个符合指定范围的随机值\nlet value1 = (Math.random() * (25 - 24)) + 24; // 范围 24-25 的随机值\nlet value2 = (Math.random() * (74 - 73)) + 73; // 范围 73-74 的随机值\nlet value3 = Math.floor((Math.random() * (460 - 440)) + 440); // 范围 440-460 的随机整数\n\n// 创建三条不同输出消息\nlet msg1 = { payload: value1.toFixed(2) };\nlet msg2 = { payload: value2.toFixed(2) };\nlet msg3 = { payload: value3 }; // 整数值，无小数\n\n// 返回三条消息，分别对应三个输出\nreturn [msg1, msg2, msg3];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 500,
        "wires": [
            [
                "812d2c67db31f875",
                "12fe7d86b63cab7d"
            ],
            [
                "fc1330a0fd430f10",
                "530a351c399f5212"
            ],
            [
                "4482f26ecf2bcb78",
                "48e6ea22777b3875"
            ]
        ]
    },
    {
        "id": "4ebfb5826ab94b5e",
        "type": "inject",
        "z": "456026febad7d00f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 500,
        "wires": [
            [
                "69cbf36cd1dc3d89"
            ]
        ]
    },
    {
        "id": "12fe7d86b63cab7d",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "7d91bf9f4248ca2a",
        "order": 3,
        "width": "5",
        "height": "5",
        "label": "temperature history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "530a351c399f5212",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "7d91bf9f4248ca2a",
        "order": 4,
        "width": "5",
        "height": "5",
        "label": "humidity history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1480,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "48e6ea22777b3875",
        "type": "ui_chart",
        "z": "456026febad7d00f",
        "name": "",
        "group": "7d91bf9f4248ca2a",
        "order": 5,
        "width": "5",
        "height": "5",
        "label": "CO2 history",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1490,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5e3be6b58047d0f2",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 9",
        "func": "// // 假设要播放的音频文件路径\n// const audioFiles = {\n//     Coco_number: \"/home/seeed/voice/cola.mp3.wav\",\n//     milk_number: \"/home/seeed/voice/milk.mp3.wav\",\n//     chips_number: \"/home/seeed/voice/chips.mp3.wav\",\n//     crackers_number: \"/home/seeed/voice/crackers.mp3.wav\",\n//     popcorn_number: \"/home/seeed/voice/popcorn.mp3.wav\",\n//     crisps_number: \"/home/seeed/voice/crisps.mp3.wav\"\n// };\n\n// // 获取上次播放时间\n// let lastPlayTime = context.get(\"lastPlayTime\") || 0;\n// const now = Date.now();\n\n// // 检查是否已经超过10秒\n// if (now - lastPlayTime < 20000) {\n//     // 如果没有超过10秒，直接返回null，跳过播放\n//     return null;\n// }\n\n// // 遍历 JSON 数据，找到第一个值为0的字段并播放对应音频\n\n\n// for (const [key, value] of Object.entries(msg.payload)) {\n//     if (value === 0 && audioFiles[key]) {\n//         // 更新上次播放时间\n//         context.set(\"lastPlayTime\", now);\n//         // msg.payload = \"mpg123 ${audioFiles[key]}\"\n//         // return msg\n\n//         // 返回单个消息，播放第一个检测到的音频\n//         return [{ payload: `aplay -t wav ${audioFiles[key]}` }];\n//     }\n// }\n\n// // 如果没有任何值为0的字段，则返回null\n// return null;\n\n\n\n// 获取输入 JSON 数据\nlet data = msg.payload;\n\n// 定义音频文件的路径\nlet audioFiles = {\n    Coco_number: \"/home/seeed/voice/cola.mp3.wav\",\n    milk_number: \"/home/seeed/voice/milk.mp3.wav\",\n    chips_number: \"/home/seeed/voice/chips.mp3.wav\",\n    crackers_number: \"/home/seeed/voice/crackers.mp3.wav\",\n    popcorn_number: \"/home/seeed/voice/popcorn.mp3.wav\",\n    crisps_number: \"/home/seeed/voice/crisps.mp3.wav\"\n};\n\n// 初始化一个数组用于存储需要播放的音频\nlet audioCommands = [];\n\n// 当前的时间戳\nlet currentTime = new Date().getTime();\n\n// 检查上次触发的时间戳\nif (context.lastTriggerTime) {\n    let timeDiff = currentTime - context.lastTriggerTime;\n\n    // 如果上次触发在10秒以内，则忽略本次触发\n    if (timeDiff < 10000) {\n        return null;\n    }\n}\n\n// 遍历每个元素，检查值是否为 0\nfor (let element in audioFiles) {\n    if (data[element] === 0) {\n        audioCommands.push(`aplay -D \"plug:SLAVE='hw:3,0'\" ${audioFiles[element]}`);\n    }\n}\n\n// 如果有音频需要播放\nif (audioCommands.length > 0) {\n    // 更新上次触发的时间戳\n    context.lastTriggerTime = currentTime;\n\n    // 将第一个音频命令作为输出\n    msg.payload = audioCommands[0];\n    return msg;\n} else {\n    // 没有匹配的音频文件，返回 null\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 760,
        "wires": [
            [
                "68a13683e43e1b84",
                "8408b36cc61ee7e3"
            ]
        ]
    },
    {
        "id": "68a13683e43e1b84",
        "type": "debug",
        "z": "456026febad7d00f",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 680,
        "wires": []
    },
    {
        "id": "20c6476c918c0933",
        "type": "debug",
        "z": "456026febad7d00f",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 680,
        "wires": []
    },
    {
        "id": "02df7d05333f0b92",
        "type": "function",
        "z": "456026febad7d00f",
        "name": "function 10",
        "func": "if (!msg.payload.alert) {\n    return null;\n}\n\nlet currentTime = new Date().getTime();\nif (context.lastTriggerTime) {\n    let timeDiff = currentTime - context.lastTriggerTime;\n    if (timeDiff < 10000) {\n        return null;\n    }\n}\ncontext.lastTriggerTime = currentTime;\n\nmsg.payload = `aplay -D \"plug:SLAVE='hw:3,0'\" -t wav /home/seeed/voice/alarm.mp3.wav`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 920,
        "wires": [
            [
                "ca0806d9952506dc"
            ]
        ]
    },
    {
        "id": "8408b36cc61ee7e3",
        "type": "exec",
        "z": "456026febad7d00f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 700,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9ce1a15723565dad",
        "type": "debug",
        "z": "456026febad7d00f",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 700,
        "wires": []
    },
    {
        "id": "ca0806d9952506dc",
        "type": "exec",
        "z": "456026febad7d00f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 960,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fe859f85de924004",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyAMA11",
        "serialType": "RTU",
        "serialBaudrate": "38400",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "81ba4dbcc56405ae",
        "type": "ui_group",
        "name": "Electrical control",
        "tab": "4a41b64ea5aba4df",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d91bf9f4248ca2a",
        "type": "ui_group",
        "name": " Air Quality State",
        "tab": "4a41b64ea5aba4df",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "441e3b3393b1c64d",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyAMA10",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "443aac205ebaacb6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4f02cdbb7a87f025",
        "type": "ui_group",
        "name": "Personnel situation",
        "tab": "4a41b64ea5aba4df",
        "order": 5,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d45c7efccb65bb76",
        "type": "ui_group",
        "name": "Product status",
        "tab": "4a41b64ea5aba4df",
        "order": 4,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0806a69ac09c82e7",
        "type": "ui_group",
        "name": "Video",
        "tab": "4a41b64ea5aba4df",
        "order": 3,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a41b64ea5aba4df",
        "type": "ui_tab",
        "name": "Visualization panel",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]